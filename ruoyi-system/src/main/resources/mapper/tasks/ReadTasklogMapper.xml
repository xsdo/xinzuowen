<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.tasks.mapper.ReadTasklogMapper">
    
    <resultMap type="ReadTasklog" id="ReadTasklogResult">
        <result property="id"    column="id"    />
        <result property="isUsed"    column="isUsed"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remarks"    column="remarks"    />
        <result property="taskId"    column="task_id"    />
        <result property="userId"    column="user_id"    />
        <result property="statusfirst"    column="statusfirst"    />
        <result property="statussecond"    column="statussecond"    />
    </resultMap>

    <sql id="selectReadTasklogVo">
        select id, isUsed, create_time, update_time, remarks, task_id, user_id, statusfirst, statussecond from read_tasklog
    </sql>

    <select id="selectReadTasklogList" parameterType="ReadTasklog" resultMap="ReadTasklogResult">
        <include refid="selectReadTasklogVo"/>
        <where>  
            <if test="isUsed != null "> and isUsed = #{isUsed}</if>
            <if test="remarks != null  and remarks != ''"> and remarks = #{remarks}</if>
            <if test="taskId != null "> and task_id = #{taskId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="statusfirst != null "> and statusfirst = #{statusfirst}</if>
            <if test="statussecond != null "> and statussecond = #{statussecond}</if>
        </where>
    </select>
    
    <select id="selectReadTasklogById" parameterType="Long" resultMap="ReadTasklogResult">
        <include refid="selectReadTasklogVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertReadTasklog" parameterType="ReadTasklog" useGeneratedKeys="true" keyProperty="id">
        insert into read_tasklog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="isUsed != null">isUsed,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remarks != null">remarks,</if>
            <if test="taskId != null">task_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="statusfirst != null">statusfirst,</if>
            <if test="statussecond != null">statussecond,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="isUsed != null">#{isUsed},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remarks != null">#{remarks},</if>
            <if test="taskId != null">#{taskId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="statusfirst != null">#{statusfirst},</if>
            <if test="statussecond != null">#{statussecond},</if>
         </trim>
    </insert>

    <update id="updateReadTasklog" parameterType="ReadTasklog">
        update read_tasklog
        <trim prefix="SET" suffixOverrides=",">
            <if test="isUsed != null">isUsed = #{isUsed},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remarks != null">remarks = #{remarks},</if>
            <if test="taskId != null">task_id = #{taskId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="statusfirst != null">statusfirst = #{statusfirst},</if>
            <if test="statussecond != null">statussecond = #{statussecond},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteReadTasklogById" parameterType="Long">
        delete from read_tasklog where id = #{id}
    </delete>

    <delete id="deleteReadTasklogByIds" parameterType="String">
        delete from read_tasklog where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>